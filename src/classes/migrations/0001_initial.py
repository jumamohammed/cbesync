# Generated by Django 5.0.14 on 2025-09-01 10:51

import classes.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('schools', '0001_initial'),
        ('teachers', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SchoolClass',
            fields=[
                ('class_id', models.CharField(default=classes.models.generate_unique_class_id, help_text='Unique identifier for the class', max_length=20, primary_key=True, serialize=False)),
                ('class_name', models.CharField(default='Grade', help_text='The name of the class e.g -stoic-room ', max_length=50)),
                ('class_level', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (11, '11'), (12, '12')], db_index=True, help_text='Educational level e.g 7,8,9', unique=True)),
                ('class_capacity', models.IntegerField(default=0, help_text='Current number of student in the class')),
                ('class_stream', models.CharField(blank=True, help_text="Optional stream Identifierve.g 'A','B'.", max_length=20, null=True)),
                ('class_status', models.CharField(choices=[('Active', 'Active'), ('Archived', 'Archived')], db_index=True, default='Active', help_text='Class status (Active or Archived).', max_length=10)),
                ('class_creation_date', models.DateTimeField(auto_now_add=True, help_text='Time when the class whas created')),
                ('class_updated_date', models.DateTimeField(auto_now=True, help_text='Last time the class was updated')),
                ('class_school', models.ForeignKey(help_text='The school owning the class', on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='schools.school')),
                ('class_teacher', models.ForeignKey(blank=True, help_text='Teache assigned to the class', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='classes_t', to='teachers.teacher')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
