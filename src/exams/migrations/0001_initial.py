# Generated by Django 5.0.14 on 2025-09-01 10:51

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import exams.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('classes', '0001_initial'),
        ('courses', '0001_initial'),
        ('schools', '0001_initial'),
        ('students', '0001_initial'),
        ('subjects', '0001_initial'),
        ('teachers', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('exam_id', models.CharField(default=exams.models.generate_unique_exam_id, help_text='Unique id for each exam', max_length=20, primary_key=True, serialize=False)),
                ('exam_name', models.CharField(help_text='Exam name (e.g., End-Term 1, Zonal CAT 2025).', max_length=100)),
                ('exam_term', models.CharField(choices=[('Pre-lim', 'Pre-lim'), ('Mid-Term', 'Mid-Term'), ('End-Term', 'End-Term')], db_index=True, help_text='Academic term E.G Mid-Term. ', max_length=20)),
                ('exam_year', models.IntegerField(db_index=True, default=2025, help_text='Year done e.g. 2025')),
                ('exam_type', models.CharField(choices=[('CAT', 'CAT'), ('Internal', 'Internal'), ('Zonal', 'Zonal'), ('National', 'National'), ('Project', 'Project')], db_index=True, default='Internal', help_text='Exam type e.g zonal', max_length=20)),
                ('exam_score', models.DecimalField(blank=True, decimal_places=2, help_text='Score awarded (0.00 to 100.00).', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('exam_max_score', models.PositiveIntegerField(default=0, help_text='Possible  maximum score')),
                ('exam_percentage_score', models.PositiveIntegerField(default=0, help_text='Exam percentage score')),
                ('exam_status', models.CharField(choices=[('Scheduled', 'Scheduled'), ('Ongoing', 'Ongoing'), ('Completed', 'Completed')], default='Scheduled', help_text='Current status of the exam.', max_length=20)),
                ('exam_creation_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now, help_text='Exam creation timestamp.')),
                ('exam_updated_date', models.DateTimeField(auto_now=True, help_text='Last time updated')),
                ('exam_class', models.ForeignKey(help_text='Class of exams', on_delete=django.db.models.deletion.CASCADE, related_name='exams', to='classes.schoolclass')),
                ('exam_course', models.ForeignKey(help_text='The course the exam is linked to', on_delete=django.db.models.deletion.CASCADE, related_name='exams', to='courses.course')),
                ('exam_school', models.ForeignKey(help_text='The school the exam', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='exams', to='schools.school')),
                ('exam_student', models.ForeignKey(help_text='Student assigned the exam.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='exams', to='students.student')),
                ('exam_subject', models.ForeignKey(help_text='The subject whose exam is', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='exams', to='subjects.subject')),
                ('exam_teacher', models.ForeignKey(blank=True, help_text='Teacher supervising the exam', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supervised_exams', to='teachers.teacher')),
            ],
            options={
                'unique_together': {('exam_course', 'exam_class', 'exam_name', 'exam_year')},
            },
        ),
    ]
