# Generated by Django 5.0.14 on 2025-09-01 10:51

import cats.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('classes', '0001_initial'),
        ('courses', '0001_initial'),
        ('students', '0001_initial'),
        ('subjects', '0001_initial'),
        ('teachers', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cat',
            fields=[
                ('cat_id', models.CharField(default=cats.models.generate_unique_cat_id, help_text='A unique id for each cat', max_length=20, primary_key=True, serialize=False)),
                ('cat_name', models.CharField(help_text='CAT name (e.g., CAT1, CAT2, Weekly Test).', max_length=100)),
                ('cat_term', models.CharField(choices=[('Pre-lim', 'Pre-lim'), ('Mid-Term', 'Mid-Term'), ('End-Term', 'End-Term')], db_index=True, help_text='Academic term E.G Mid-Term. ', max_length=20)),
                ('cat_year', models.IntegerField(db_index=True, default=2025, help_text='Year done e.g. 2025')),
                ('cat_score', models.DecimalField(blank=True, decimal_places=2, help_text='Score awarded (0.00 to 100.00).', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('cat_max_score', models.PositiveIntegerField(default=0, help_text='Possible maximum score')),
                ('cat_percentage_score', models.PositiveIntegerField(default=0, help_text='Cat percentage score')),
                ('cat_creation_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Date cat was taken')),
                ('cat_updated_date', models.DateTimeField(auto_now=True, help_text='Last time cat record was updated')),
                ('cat_class', models.ForeignKey(help_text='Class associated with the cat', on_delete=django.db.models.deletion.CASCADE, related_name='cats', to='classes.schoolclass')),
                ('cat_course', models.ForeignKey(help_text='Course associated with the cat', on_delete=django.db.models.deletion.CASCADE, related_name='cats', to='courses.course')),
                ('cat_student', models.ForeignKey(help_text='Student assigned the cat.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cats', to='students.student')),
                ('cat_subject', models.ForeignKey(help_text='Subject associated with the cat', on_delete=django.db.models.deletion.CASCADE, related_name='cats', to='subjects.subject')),
                ('cat_teacher', models.ForeignKey(help_text='Teacher associated with the cat', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supervised_cats', to='teachers.teacher')),
            ],
        ),
    ]
