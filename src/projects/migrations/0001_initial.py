# Generated by Django 5.0.14 on 2025-08-31 08:32

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import projects.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('classes', '0001_initial'),
        ('students', '0001_initial'),
        ('subjects', '0001_initial'),
        ('teachers', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('project_id', models.CharField(default=projects.models.generate_unique_project_id, help_text='Unique identifier for the project.', max_length=20, primary_key=True, serialize=False)),
                ('project_title', models.CharField(help_text='Project title.', max_length=200)),
                ('project_description', models.TextField(blank=True, help_text='Details of the project.')),
                ('project_score', models.DecimalField(blank=True, decimal_places=2, help_text='Score awarded (0.00 to 100.00).', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('project_max_score', models.PositiveIntegerField(default=0, help_text='Possible maximum score')),
                ('project_percentage_score', models.PositiveIntegerField(default=0, help_text='Project percentage score')),
                ('project_term', models.CharField(choices=[('Pre-lim', 'Pre-lim'), ('Mid-Term', 'Mid-Term'), ('End-Term', 'End-Term')], db_index=True, help_text='Academic term E.G Mid-Term. ', max_length=20)),
                ('project_year', models.IntegerField(db_index=True, default=2025, help_text='Year done e.g. 2025')),
                ('project_creation_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Submission date.')),
                ('project_update_date', models.DateTimeField(auto_now=True, help_text='When the project was marked.')),
                ('project_class', models.ForeignKey(help_text='Class assigned with the project', on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='classes.schoolclass')),
                ('project_student', models.ForeignKey(help_text='Student assigned the project.', on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='students.student')),
                ('project_subject', models.ForeignKey(help_text='Subject linked to the project.', on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='subjects.subject')),
                ('project_teacher', models.ForeignKey(blank=True, help_text='Teacher supervising the projects', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supervised_projects', to='teachers.teacher')),
            ],
        ),
    ]
